#!/bin/bash
#
# CMake wrapper for building ceph with our scripts
# Copyright (C) 2019  Joao Eduardo Luis <joao@wipwd.org>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

CONF_PATH=${HOME}/.ceph_ccache/ceph_ccache.conf

[[ ! -d ".git" ]] && \
  echo "$(basename $0): requires being run in a git repository" && exit 1

RELEASE_NAME=$(basename $(pwd) | cut -f2 -d'.')

do_commits=false
do_week=true
do_day=false
do_kept=false
do_update_kept_date=false
do_export=false
use_python2=false

while [[ $# -gt 0 ]]; do

  case $1 in
    -r|--release)
      [[ -z "$2" ]] && \
        >&2 echo "missing argument to option '$1'" && exit 1
      RELEASE_NAME=$2
      ;;
    -k|--use-kept-date)
      do_kept=true
      ;;
    -u|--update-date)
      do_update_kept_date=true
      ;;
    -w|--week)
      do_week=true
      do_day=false
      ;;
    -d|--day)
      do_week=false
      do_day=true
      ;;
    --with-commits)
      do_commits=true
      ;;
    -c|--config)
      [[ -z "$2" ]] && \
        >&2 echo "missing argument to option '$1'" && exit 1
      CONF_PATH=$2
      ;;
      --with-python2)
        use_python2=true
        ;;
    -h|--help)
      cat << EOF
usage: $0 [options] [-- ARGS]

 options:
  -r | --release <NAME>  override release name (default: ${RELEASE_NAME})
  -k | --use-kept-date   keep used date (may have kinks)
  -u | --update-date     use existing kept date
  -w | --week            build using a cache TTL of one week
  -d | --day             build using a cache TTL of one day
       --with-commits    build considering git commits (rebuilds often)
  -c | --config <PATH>   with different config file (default: ${CONF_PATH})
       --with-python2    use python2
  -h | --help            this message

EOF
      exit 0
      ;;
    --)
	  shift
      break
      ;;
  esac
  shift
done

source ${CONF_PATH}

# just keeps the cache for a day
#   adjust if you think you may need more than a day

base_date=""
$do_week && base_date="-dmonday"

kept_date_fn=${CEPH_CCACHE_EPOCHS_EPOCH_FN}
exports_fn=${CEPH_CCACHE_EPOCHS_EXPORTS_FN}

if $do_kept ; then
  if [[ ! -e "${kept_date_fn}" ]]; then
    echo "no previously kept date, ignore -k; a new date will be saved."
  else
    kept_date=$(cat ${kept_date_fn})
    if [[ -z "$kept_date" ]]; then
      echo "kept date is empty, removing file"
      rm ${kept_date_fn}
    else
      base_date="--utc --date=@${kept_date}"
      echo "using kept date: ${kept_date}, $(date $base_date +%D)"
    fi
  fi
fi

src_date_epoch=$(date $base_date +%D |date -f- +%s)
bld_date=$(date --utc --date=@${src_date_epoch} +%Y-%m-%d)

echo "src date epoch: $src_date_epoch"
echo "      bld date: $bld_date"

if $do_update_kept_date; then
  echo $src_date_epoch > ${kept_date_fn}
  echo "kept date epoch $src_date_epoch in ${kept_date_fn}"
fi

if $do_update_kept_date; then
cat >> ${exports_fn} << EOF
export SOURCE_DATE_EPOCH=$src_date_epoch
export BUILD_DATE=$bld_date
EOF
fi

if [[ ! -e "${exports_fn}" ]]; then
  >&2 echo "unable to find exports file at '${exports_fn}'; skip."
else
  source ${exports_fn}
fi

extra_opts="-DENABLE_GIT_VERSION=no"
$do_commits && extra_opts="$extra_opts -DENABLE_GIT_VERSION=yes"

if $use_python2; then
  extra_opts="${extra_opts} -DWITH_PYTHON3=OFF -DWITH_PYTHON2=ON "
  extra_opts="${extra_opts} -DMGR_PYTHON_VERSION=2"
else
  extra_opts="${extra_opts} -DWITH_PYTHON3=ON -DWITH_PYTHON2=OFF "
  extra_opts="${extra_opts} -DMGR_PYTHON_VERSION=3"
fi

export CCACHE_DIR
export CCACHE_BASEDIR

./do_cmake.sh \
  -DWITH_LTTNG=no -DWITH_BABELTRACE=no -DWITH_MANPAGE=no \
  $extra_opts $@
