#
# configuration file for ceph ccache infrastructure
#

SOURCED_PATH=
SOURCED_PATH_DIR=

load() {

  [[ -z "${BASH_SOURCE[0]}" ]] && \
    >&2 echo "not called from script; abort." && return 1

  SOURCED_PATH=$(readlink -f "${BASH_SOURCE[0]}")
  SOURCED_PATH_DIR=$(dirname ${SOURCED_PATH})

  if [[ -e "${SOURCED_PATH}/common/print_helpers.sh" ]]; then
    source ${SOURCED_PATH}/common/print_helpers.sh
  else
    info() { }
    err() { }
  fi

  [[ ! -e "${SOURCED_PATH}/ceph_helper.conf" ]] && \
    >&2 echo "unable to find ceph helper configuration" && return 1

  source ${SOURCED_PATH}/ceph_helper.conf

  return 0
}

load || exit 1

[[ -z "${RELEASE_NAME}" ]] && \
  >&2 echo "RELEASE_NAME not provided; abort." && exit 1

CEPH_SOURCES_DIR=/srv/ceph
CEPH_CCACHE_DIR=${SOURCED_PATH_DIR}/ccache

CCACHE_DIR=${CEPH_CCACHE_DIR}/${RELEASE_NAME}
CCACHE_BASEDIR=${CEPH_SOURCES_DIR}/ceph.${RELEASE_NAME}

mkdir -p ${CCACHE_DIR}

CEPH_CCACHE_EPOCHS_PATH=${SOURCED_PATH_DIR}/epochs
CEPH_CCACHE_EPOCHS_RELEASE=${CEPH_CCACHE_EPOCHS_PATH}/${RELEASE_NAME}
CEPH_CCACHE_EPOCHS_EXPORTS_FN=${CEPH_CCACHE_EPOCHS_RELEASE}/exports
CEPH_CCACHE_EPOCHS_EPOCH_FN=${CEPH_CCACHE_EPOCHS_RELEASE}/epoch

cat <<EOF
bash source:          ${BASH_SOURCE[@]}

sourced path:         ${SOURCED_PATH}
sourced path dir:     ${SOURCED_PATH_DIR}

epochs path:          ${CEPH_CCACHE_EPOCHS_PATH}
epochs release:       ${CEPH_CCACHE_EPOCHS_RELEASE}
epochs exports fn:    ${CEPH_CCACHE_EPOCHS_EXPORTS_FN}
epochs epoch fn:      ${CEPH_CCACHE_EPOCHS_EPOCH_FN}
EOF

mkdir -p ${CEPH_CCACHE_EPOCHS_PATH}
mkdir -p ${CEPH_CCACHE_EPOCHS_RELEASE}

